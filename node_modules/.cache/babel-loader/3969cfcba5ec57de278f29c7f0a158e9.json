{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/manmanbbg/Desktop/degree/FYP/project/FYP_UI/src/views/Client/ClientCulture/CheckBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Checkbox, Collapse } from \"antd\";\nconst {\n  Panel\n} = Collapse;\n\nfunction CheckBox(props) {\n  _s();\n\n  const [Checked, setChecked] = useState([]);\n\n  const handleToggle = value => {\n    const currentIndex = Checked.indexOf(value);\n    const newChecked = [...Checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n    props.handleFilters(newChecked);\n  };\n\n  const renderCheckboxLists = () => props.list && props.list.map((value, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n      onChange: () => handleToggle(value._id),\n      type: \"checkbox\",\n      checked: Checked.indexOf(value._id) === -1 ? false : true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n      children: value.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\"]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 7\n  }, this));\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Collapse, {\n      defaultActiveKey: [\"0\"],\n      children: /*#__PURE__*/_jsxDEV(Panel, {\n        header: \"Continents\",\n        children: renderCheckboxLists()\n      }, \"1\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CheckBox, \"LoBEO5bj0jppbj/4bBIJfflmezY=\");\n\n_c = CheckBox;\nexport default CheckBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckBox\");","map":{"version":3,"sources":["/Users/manmanbbg/Desktop/degree/FYP/project/FYP_UI/src/views/Client/ClientCulture/CheckBox.js"],"names":["React","useState","Checkbox","Collapse","Panel","CheckBox","props","Checked","setChecked","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","handleFilters","renderCheckboxLists","list","map","index","_id","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,MAAnC;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAYD,QAAlB;;AAEA,SAASE,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMQ,YAAY,GAAIC,KAAD,IAAW;AAC9B,UAAMC,YAAY,GAAGJ,OAAO,CAACK,OAAR,CAAgBF,KAAhB,CAArB;AACA,UAAMG,UAAU,GAAG,CAAC,GAAGN,OAAJ,CAAnB;;AAEA,QAAII,YAAY,KAAK,CAAC,CAAtB,EAAyB;AACvBE,MAAAA,UAAU,CAACC,IAAX,CAAgBJ,KAAhB;AACD,KAFD,MAEO;AACLG,MAAAA,UAAU,CAACE,MAAX,CAAkBJ,YAAlB,EAAgC,CAAhC;AACD;;AAEDH,IAAAA,UAAU,CAACK,UAAD,CAAV;AACAP,IAAAA,KAAK,CAACU,aAAN,CAAoBH,UAApB;AACD,GAZD;;AAcA,QAAMI,mBAAmB,GAAG,MAC1BX,KAAK,CAACY,IAAN,IACAZ,KAAK,CAACY,IAAN,CAAWC,GAAX,CAAe,CAACT,KAAD,EAAQU,KAAR,kBACb,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,QAAD;AACE,MAAA,QAAQ,EAAE,MAAMX,YAAY,CAACC,KAAK,CAACW,GAAP,CAD9B;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,OAAO,EAAEd,OAAO,CAACK,OAAR,CAAgBF,KAAK,CAACW,GAAtB,MAA+B,CAAC,CAAhC,GAAoC,KAApC,GAA4C;AAHvD;AAAA;AAAA;AAAA;AAAA,YADF,2BAOE;AAAA,gBAAOX,KAAK,CAACY;AAAb;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,KAAqBF,KAArB;AAAA;AAAA;AAAA;AAAA,UADF,CAFF;;AAeA,sBACE;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,gBAAgB,EAAE,CAAC,GAAD,CAA5B;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,MAAM,EAAC,YAAd;AAAA,kBACGH,mBAAmB;AADtB,SAA+B,GAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAzCQZ,Q;;KAAAA,Q;AA2CT,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Checkbox, Collapse } from \"antd\";\n\nconst { Panel } = Collapse;\n\nfunction CheckBox(props) {\n  const [Checked, setChecked] = useState([]);\n\n  const handleToggle = (value) => {\n    const currentIndex = Checked.indexOf(value);\n    const newChecked = [...Checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n    props.handleFilters(newChecked);\n  };\n\n  const renderCheckboxLists = () =>\n    props.list &&\n    props.list.map((value, index) => (\n      <React.Fragment key={index}>\n        <Checkbox\n          onChange={() => handleToggle(value._id)}\n          type=\"checkbox\"\n          checked={Checked.indexOf(value._id) === -1 ? false : true}\n        />\n        &nbsp;&nbsp;\n        <span>{value.name}</span>\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n      </React.Fragment>\n    ));\n\n  return (\n    <div>\n      <Collapse defaultActiveKey={[\"0\"]}>\n        <Panel header=\"Continents\" key=\"1\">\n          {renderCheckboxLists()}\n        </Panel>\n      </Collapse>\n    </div>\n  );\n}\n\nexport default CheckBox;\n"]},"metadata":{},"sourceType":"module"}