{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/manmanbbg/Desktop/degree/FYP/project/FYP_UI/src/views/Client/ClientDashboard/ClientDashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport Webcam from \"react-webcam\";\nimport CircularProgress from \"@material-ui/core\";\nimport { drawRect } from \"./utilities\";\nimport { useFetch } from \"../../../hooks\";\n\nconst ClientDashboard = () => {\n  _s();\n\n  const {\n    isLoading,\n    Grid\n  } = useFetch(\"/cultures/group\");\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  const runCoco = async () => {\n    const net = await tf.loadGraphModel(\"https://signlanguage-tensorflow.s3.jp-tok.cloud-object-storage.appdomain.cloud/model.json\");\n    setInterval(() => {\n      detect(net);\n    }, 16.7);\n  };\n\n  const detect = async net => {\n    if (typeof webcamRef.current !== \"undefined\" && webcamRef.current !== null && webcamRef.current.video.readyState === 4) {\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n      const img = tf.browser.fromPixels(video);\n      const resized = tf.image.resizeBilinear(img, [640, 480]);\n      const casted = resized.cast(\"int32\");\n      const expanded = casted.expandDims(0);\n      const obj = await net.executeAsync(expanded);\n      const boxes = await obj[1].array();\n      const classes = await obj[2].array();\n      const scores = await obj[4].array();\n      const ctx = canvasRef.current.getContext(\"2d\");\n      requestAnimationFrame(() => {\n        drawRect(boxes[0], classes[0], scores[0], 0.8, videoWidth, videoHeight, ctx);\n      });\n      tf.dispose(img);\n      tf.dispose(resized);\n      tf.dispose(casted);\n      tf.dispose(expanded);\n      tf.dispose(obj);\n    }\n  };\n\n  useEffect(() => {\n    runCoco();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this) : [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        position: \"absolute\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        left: 0,\n        right: 0,\n        textAlign: \"center\",\n        zindex: 8,\n        width: 640,\n        height: 480\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }, this)]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ClientDashboard, \"Opx05mHsLc+xl56OQOaJA4JsMfc=\", false, function () {\n  return [useFetch];\n});\n\n_c = ClientDashboard;\nexport default ClientDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientDashboard\");","map":{"version":3,"sources":["/Users/manmanbbg/Desktop/degree/FYP/project/FYP_UI/src/views/Client/ClientDashboard/ClientDashboard.js"],"names":["React","useRef","useEffect","tf","Webcam","CircularProgress","drawRect","useFetch","ClientDashboard","isLoading","Grid","webcamRef","canvasRef","runCoco","net","loadGraphModel","setInterval","detect","current","video","readyState","videoWidth","videoHeight","width","height","img","browser","fromPixels","resized","image","resizeBilinear","casted","cast","expanded","expandDims","obj","executeAsync","boxes","array","classes","scores","ctx","getContext","requestAnimationFrame","dispose","position","marginLeft","marginRight","left","right","textAlign","zindex"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport Webcam from \"react-webcam\";\nimport CircularProgress from \"@material-ui/core\";\n\nimport { drawRect } from \"./utilities\";\nimport { useFetch } from \"../../../hooks\";\n\nconst ClientDashboard = () => {\n  const { isLoading, Grid } = useFetch(\"/cultures/group\");\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  const runCoco = async () => {\n    const net = await tf.loadGraphModel(\n      \"https://signlanguage-tensorflow.s3.jp-tok.cloud-object-storage.appdomain.cloud/model.json\"\n    );\n\n    setInterval(() => {\n      detect(net);\n    }, 16.7);\n  };\n\n  const detect = async (net) => {\n    if (\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null &&\n      webcamRef.current.video.readyState === 4\n    ) {\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n\n      const img = tf.browser.fromPixels(video);\n      const resized = tf.image.resizeBilinear(img, [640, 480]);\n      const casted = resized.cast(\"int32\");\n      const expanded = casted.expandDims(0);\n      const obj = await net.executeAsync(expanded);\n\n      const boxes = await obj[1].array();\n      const classes = await obj[2].array();\n      const scores = await obj[4].array();\n\n      const ctx = canvasRef.current.getContext(\"2d\");\n\n      requestAnimationFrame(() => {\n        drawRect(\n          boxes[0],\n          classes[0],\n          scores[0],\n          0.8,\n          videoWidth,\n          videoHeight,\n          ctx\n        );\n      });\n\n      tf.dispose(img);\n      tf.dispose(resized);\n      tf.dispose(casted);\n      tf.dispose(expanded);\n      tf.dispose(obj);\n    }\n  };\n\n  useEffect(() => {\n    runCoco();\n  }, []);\n\n  return (\n    <div>\n      {isLoading ? (\n        <Grid item xs={12}>\n          <CircularProgress />\n        </Grid>\n      ) : (\n        [\n          <canvas\n            ref={canvasRef}\n            style={{\n              position: \"absolute\",\n              marginLeft: \"auto\",\n              marginRight: \"auto\",\n              left: 0,\n              right: 0,\n              textAlign: \"center\",\n              zindex: 8,\n              width: 640,\n              height: 480,\n            }}\n          />,\n        ]\n      )}\n    </div>\n  );\n};\n\nexport default ClientDashboard;\n"]},"metadata":{},"sourceType":"module"}