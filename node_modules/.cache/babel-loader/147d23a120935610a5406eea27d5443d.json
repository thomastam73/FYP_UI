{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from\"react\";import{CircularProgress,Grid,Typography}from\"@material-ui/core\";import dayjs from\"dayjs\";// fontawesome\nimport{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{faExclamationTriangle}from\"@fortawesome/free-solid-svg-icons\";// hook\nimport{useFetch}from\"../../../hooks\";// component\nimport SignLanguagCard from\"./SignLanguagCard\";dayjs.locale(\"zh-hk\");var getDiffDays=function getDiffDays(date){var today=dayjs(new Date());var lastDate=dayjs(date);return today.diff(lastDate,\"day\");};var noCasesMessage=function noCasesMessage(count){return count===0?/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:\"No any cases in 14 days.\"}):\"\";};var ClientSignLanguages=function ClientSignLanguages(){var _useFetch=useFetch(\"/signLanguages\"),data=_useFetch.data,isLoading=_useFetch.isLoading;var signLanguageList=data.map(function(information){if(getDiffDays(information.lastDate)<=14){return/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:4,children:/*#__PURE__*/_jsx(SignLanguagCard,{information:information})},information._id);}return null;});return/*#__PURE__*/_jsx(\"div\",{children:isLoading?/*#__PURE__*/_jsx(CircularProgress,{}):/*#__PURE__*/_jsx(Grid,{container:true,spacing:3,children:/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h6\",paragraph:true,children:[/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faExclamationTriangle}),\" High Risk Areas / Buildings (14days)\"]}),/*#__PURE__*/_jsxs(Grid,{container:true,spacing:3,children:[signLanguageList,noCasesMessage(data.length)]})]})})});};export default ClientSignLanguages;","map":{"version":3,"sources":["/Users/manmanbbg/Desktop/degree/FYP/project/FYP_UI/src/views/Client/ClientSignLanguage/ClientSignLanguage.js"],"names":["React","CircularProgress","Grid","Typography","dayjs","FontAwesomeIcon","faExclamationTriangle","useFetch","SignLanguagCard","locale","getDiffDays","date","today","Date","lastDate","diff","noCasesMessage","count","ClientSignLanguages","data","isLoading","signLanguageList","map","information","_id","length"],"mappings":"wFAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,gBAAT,CAA2BC,IAA3B,CAAiCC,UAAjC,KAAmD,mBAAnD,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA;AACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OAASC,qBAAT,KAAsC,mCAAtC,CACA;AACA,OAASC,QAAT,KAAyB,gBAAzB,CACA;AACA,MAAOC,CAAAA,eAAP,KAA4B,mBAA5B,CAEAJ,KAAK,CAACK,MAAN,CAAa,OAAb,EAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,IAAD,CAAU,CAC5B,GAAMC,CAAAA,KAAK,CAAGR,KAAK,CAAC,GAAIS,CAAAA,IAAJ,EAAD,CAAnB,CACA,GAAMC,CAAAA,QAAQ,CAAGV,KAAK,CAACO,IAAD,CAAtB,CACA,MAAOC,CAAAA,KAAK,CAACG,IAAN,CAAWD,QAAX,CAAqB,KAArB,CAAP,CACD,CAJD,CAMA,GAAME,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAW,CAChC,MAAOA,CAAAA,KAAK,GAAK,CAAV,cACL,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,sCADK,CAKL,EALF,CAOD,CARD,CAUA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAM,eACJX,QAAQ,CAAC,gBAAD,CADJ,CACxBY,IADwB,WACxBA,IADwB,CAClBC,SADkB,WAClBA,SADkB,CAGhC,GAAMC,CAAAA,gBAAgB,CAAGF,IAAI,CAACG,GAAL,CAAS,SAACC,WAAD,CAAiB,CACjD,GAAIb,WAAW,CAACa,WAAW,CAACT,QAAb,CAAX,EAAqC,EAAzC,CAA6C,CAC3C,mBACE,KAAC,IAAD,EAA4B,IAAI,KAAhC,CAAiC,EAAE,CAAE,EAArC,CAAyC,EAAE,CAAE,CAA7C,CAAgD,EAAE,CAAE,CAApD,uBACE,KAAC,eAAD,EAAiB,WAAW,CAAES,WAA9B,EADF,EAAWA,WAAW,CAACC,GAAvB,CADF,CAKD,CACD,MAAO,KAAP,CACD,CATwB,CAAzB,CAWA,mBACE,qBACGJ,SAAS,cACR,KAAC,gBAAD,IADQ,cAGR,KAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAE,CAAzB,uBACE,MAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,wBACE,MAAC,UAAD,EAAY,OAAO,CAAC,IAApB,CAAyB,SAAS,KAAlC,wBACE,KAAC,eAAD,EAAiB,IAAI,CAAEd,qBAAvB,EADF,2CADF,cAKE,MAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAE,CAAzB,WACGe,gBADH,CAEGL,cAAc,CAACG,IAAI,CAACM,MAAN,CAFjB,GALF,GADF,EAJJ,EADF,CAoBD,CAlCD,CAoCA,cAAeP,CAAAA,mBAAf","sourcesContent":["import React from \"react\";\nimport { CircularProgress, Grid, Typography } from \"@material-ui/core\";\nimport dayjs from \"dayjs\";\n// fontawesome\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faExclamationTriangle } from \"@fortawesome/free-solid-svg-icons\";\n// hook\nimport { useFetch } from \"../../../hooks\";\n// component\nimport SignLanguagCard from \"./SignLanguagCard\";\n\ndayjs.locale(\"zh-hk\");\n\nconst getDiffDays = (date) => {\n  const today = dayjs(new Date());\n  const lastDate = dayjs(date);\n  return today.diff(lastDate, \"day\");\n};\n\nconst noCasesMessage = (count) => {\n  return count === 0 ? (\n    <Grid item xs={12}>\n      No any cases in 14 days.\n    </Grid>\n  ) : (\n    \"\"\n  );\n};\n\nconst ClientSignLanguages = () => {\n  const { data, isLoading } = useFetch(\"/signLanguages\");\n\n  const signLanguageList = data.map((information) => {\n    if (getDiffDays(information.lastDate) <= 14) {\n      return (\n        <Grid key={information._id} item xs={12} sm={6} md={4}>\n          <SignLanguagCard information={information} />\n        </Grid>\n      );\n    }\n    return null;\n  });\n\n  return (\n    <div>\n      {isLoading ? (\n        <CircularProgress />\n      ) : (\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <Typography variant=\"h6\" paragraph>\n              <FontAwesomeIcon icon={faExclamationTriangle} /> High Risk Areas /\n              Buildings (14days)\n            </Typography>\n            <Grid container spacing={3}>\n              {signLanguageList}\n              {noCasesMessage(data.length)}\n            </Grid>\n          </Grid>\n        </Grid>\n      )}\n    </div>\n  );\n};\n\nexport default ClientSignLanguages;\n"]},"metadata":{},"sourceType":"module"}