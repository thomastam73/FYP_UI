{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/manmanbbg/Desktop/degree/FYP/project/FYP_UI/src/views/Management/SignLanguage/AddSignLanguage/AddSignLanguage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Grid } from \"@material-ui/core\"; // components\n\nimport { DashboardContainer, LoadingButton } from \"../../../../components\";\nimport { CaseInfo } from \"../components\"; // hooks\n\nimport { usePost } from \"../../../../hooks\"; // config\n\nimport dataModel from \"../config/data\";\nimport imageToBase64 from \"image-to-base64\";\n\nconst AddSignLanguage = () => {\n  _s();\n\n  const [states, setStates] = React.useState(dataModel);\n  const [res, postMethod] = usePost({\n    url: \"/signlanguages\",\n    payload: states\n  });\n\n  const handleFileChange = event => {\n    convertImgToBase64(event.target.file, name);\n  };\n\n  const convertImgToBase64 = imageFile => {\n    if (imageFile) {\n      let fileReader = new FileReader();\n\n      fileReader.onload = function (fileLoadedEvent) {\n        let srcData = fileLoadedEvent.target.result;\n        setStates({ ...states,\n          imgURL: imageToBase64(srcData)\n        });\n      };\n\n      fileReader.readAsDataURL(imageFile);\n    }\n  };\n\n  const handleOnChange = name => e => {\n    setStates({ ...states,\n      [name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(DashboardContainer, {\n    title: \"Add a new sign language\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 12,\n        lg: 8,\n        children: /*#__PURE__*/_jsxDEV(CaseInfo, {\n          states: states,\n          handleOnChange: handleOnChange,\n          handleFileChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(LoadingButton, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: postMethod,\n          isLoading: res.isLoading,\n          children: \"SUBMIT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddSignLanguage, \"ZRGp/VcbTLTauAtXCMIgQV5UJII=\", false, function () {\n  return [usePost];\n});\n\n_c = AddSignLanguage;\nexport default AddSignLanguage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddSignLanguage\");","map":{"version":3,"sources":["/Users/manmanbbg/Desktop/degree/FYP/project/FYP_UI/src/views/Management/SignLanguage/AddSignLanguage/AddSignLanguage.js"],"names":["React","Grid","DashboardContainer","LoadingButton","CaseInfo","usePost","dataModel","imageToBase64","AddSignLanguage","states","setStates","useState","res","postMethod","url","payload","handleFileChange","event","convertImgToBase64","target","file","name","imageFile","fileReader","FileReader","onload","fileLoadedEvent","srcData","result","imgURL","readAsDataURL","handleOnChange","e","value","isLoading"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,mBAArB,C,CAEA;;AACA,SAASC,kBAAT,EAA6BC,aAA7B,QAAkD,wBAAlD;AACA,SAASC,QAAT,QAAyB,eAAzB,C,CACA;;AACA,SAASC,OAAT,QAAwB,mBAAxB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,KAAK,CAACW,QAAN,CAAeL,SAAf,CAA5B;AACA,QAAM,CAACM,GAAD,EAAMC,UAAN,IAAoBR,OAAO,CAAC;AAAES,IAAAA,GAAG,EAAE,gBAAP;AAAyBC,IAAAA,OAAO,EAAEN;AAAlC,GAAD,CAAjC;;AAEA,QAAMO,gBAAgB,GAAIC,KAAD,IAAW;AAClCC,IAAAA,kBAAkB,CAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,EAAoBC,IAApB,CAAlB;AACD,GAFD;;AAIA,QAAMH,kBAAkB,GAAII,SAAD,IAAe;AACxC,QAAIA,SAAJ,EAAe;AACb,UAAIC,UAAU,GAAG,IAAIC,UAAJ,EAAjB;;AACAD,MAAAA,UAAU,CAACE,MAAX,GAAoB,UAAUC,eAAV,EAA2B;AAC7C,YAAIC,OAAO,GAAGD,eAAe,CAACP,MAAhB,CAAuBS,MAArC;AACAlB,QAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAaoB,UAAAA,MAAM,EAAEtB,aAAa,CAACoB,OAAD;AAAlC,SAAD,CAAT;AACD,OAHD;;AAIAJ,MAAAA,UAAU,CAACO,aAAX,CAAyBR,SAAzB;AACD;AACF,GATD;;AAWA,QAAMS,cAAc,GAAIV,IAAD,IAAWW,CAAD,IAAO;AACtCtB,IAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAa,OAACY,IAAD,GAAQW,CAAC,CAACb,MAAF,CAASc;AAA9B,KAAD,CAAT;AACD,GAFD;;AAIA,sBACE,QAAC,kBAAD;AAAoB,IAAA,KAAK,EAAC,yBAA1B;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,EAAvB;AAA2B,QAAA,EAAE,EAAE,CAA/B;AAAA,+BACE,QAAC,QAAD;AACE,UAAA,MAAM,EAAExB,MADV;AAEE,UAAA,cAAc,EAAEsB,cAFlB;AAGE,UAAA,gBAAgB,EAAEf;AAHpB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA,+BACE,QAAC,aAAD;AACE,UAAA,OAAO,EAAC,WADV;AAEE,UAAA,KAAK,EAAC,SAFR;AAGE,UAAA,OAAO,EAAEH,UAHX;AAIE,UAAA,SAAS,EAAED,GAAG,CAACsB,SAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CA/CD;;GAAM1B,e;UAEsBH,O;;;KAFtBG,e;AAiDN,eAAeA,eAAf","sourcesContent":["import React from \"react\";\nimport { Grid } from \"@material-ui/core\";\n\n// components\nimport { DashboardContainer, LoadingButton } from \"../../../../components\";\nimport { CaseInfo } from \"../components\";\n// hooks\nimport { usePost } from \"../../../../hooks\";\n// config\nimport dataModel from \"../config/data\";\nimport imageToBase64 from \"image-to-base64\";\n\nconst AddSignLanguage = () => {\n  const [states, setStates] = React.useState(dataModel);\n  const [res, postMethod] = usePost({ url: \"/signlanguages\", payload: states });\n\n  const handleFileChange = (event) => {\n    convertImgToBase64(event.target.file, name);\n  };\n\n  const convertImgToBase64 = (imageFile) => {\n    if (imageFile) {\n      let fileReader = new FileReader();\n      fileReader.onload = function (fileLoadedEvent) {\n        let srcData = fileLoadedEvent.target.result;\n        setStates({ ...states, imgURL: imageToBase64(srcData) });\n      };\n      fileReader.readAsDataURL(imageFile);\n    }\n  };\n\n  const handleOnChange = (name) => (e) => {\n    setStates({ ...states, [name]: e.target.value });\n  };\n\n  return (\n    <DashboardContainer title=\"Add a new sign language\">\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={12} lg={8}>\n          <CaseInfo\n            states={states}\n            handleOnChange={handleOnChange}\n            handleFileChange={handleFileChange}\n          />\n        </Grid>\n\n        <Grid item xs={12}>\n          <LoadingButton\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={postMethod}\n            isLoading={res.isLoading}\n          >\n            SUBMIT\n          </LoadingButton>\n        </Grid>\n      </Grid>\n    </DashboardContainer>\n  );\n};\n\nexport default AddSignLanguage;\n"]},"metadata":{},"sourceType":"module"}