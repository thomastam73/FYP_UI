{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/manmanbbg/Desktop/degree/FYP/project/FYP_UI/src/views/Client/ClientCulture/ClientCulture.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { CircularProgress, Grid, Typography, makeStyles, Divider } from \"@material-ui/core\"; // hook\n\nimport { useFetch } from \"../../../hooks\"; // components\n\nimport CultureList from \"./CultureList\";\nimport Pagination from \"./Pagination\";\nconst useStyles = makeStyles({\n  title: {\n    fontWeight: \"bold\"\n  }\n});\n\nconst ClientCulture = () => {\n  _s();\n\n  const [posts, setPosts] = React.useState([]);\n  const {\n    data,\n    isLoading\n  } = useFetch(\"/cultures/group\");\n  const clasess = useStyles();\n  const [currentPage, setCurrentPage] = React.useState(1);\n  const [postsPerPage] = React.useState(10);\n  React.useEffect(() => {\n    setPosts(data);\n  }, []);\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h3\",\n            align: \"center\",\n            className: clasess.title,\n            children: \"Deaf and Dumb People Culture\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), isLoading ? /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this) : [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(CultureList, {\n            data: currentPosts\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          children: /*#__PURE__*/_jsxDEV(Pagination, {\n            postsPerPage: postsPerPage,\n            totalPosts: posts.length,\n            paginate: paginate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this)]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ClientCulture, \"t/dyfs554Uitv3UuPHcD/XqDOAw=\", false, function () {\n  return [useFetch, useStyles];\n});\n\n_c = ClientCulture;\nexport default ClientCulture;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientCulture\");","map":{"version":3,"sources":["/Users/manmanbbg/Desktop/degree/FYP/project/FYP_UI/src/views/Client/ClientCulture/ClientCulture.js"],"names":["React","CircularProgress","Grid","Typography","makeStyles","Divider","useFetch","CultureList","Pagination","useStyles","title","fontWeight","ClientCulture","posts","setPosts","useState","data","isLoading","clasess","currentPage","setCurrentPage","postsPerPage","useEffect","indexOfLastPost","indexOfFirstPost","currentPosts","slice","paginate","pageNumber","length"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  CircularProgress,\n  Grid,\n  Typography,\n  makeStyles,\n  Divider,\n} from \"@material-ui/core\";\n\n// hook\nimport { useFetch } from \"../../../hooks\";\n// components\nimport CultureList from \"./CultureList\";\nimport Pagination from \"./Pagination\";\nconst useStyles = makeStyles({\n  title: {\n    fontWeight: \"bold\",\n  },\n});\n\nconst ClientCulture = () => {\n  const [posts, setPosts] = React.useState([]);\n  const { data, isLoading } = useFetch(\"/cultures/group\");\n  const clasess = useStyles();\n  const [currentPage, setCurrentPage] = React.useState(1);\n  const [postsPerPage] = React.useState(10);\n\n  React.useEffect(() => {\n    setPosts(data);\n  }, []);\n\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  return (\n    <div>\n      <Grid item xs={12}>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <Typography variant=\"h3\" align=\"center\" className={clasess.title}>\n              Deaf and Dumb People Culture\n            </Typography>\n            <Divider />\n          </Grid>\n          {isLoading ? (\n            <Grid item xs={12}>\n              <CircularProgress />\n            </Grid>\n          ) : (\n            [\n              <Grid item xs={12}>\n                <CultureList data={currentPosts} />\n              </Grid>,\n              <Grid>\n                <Pagination\n                  postsPerPage={postsPerPage}\n                  totalPosts={posts.length}\n                  paginate={paginate}\n                />\n              </Grid>,\n            ]\n          )}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default ClientCulture;\n"]},"metadata":{},"sourceType":"module"}