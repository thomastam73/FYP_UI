{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/manmanbbg/Desktop/degree/FYP/project/FYP_UI/src/views/Client/ClientLocation/LocationCard.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport dayjs from \"dayjs\";\nimport { Grid, makeStyles, CardHeader, Card, CardContent, Typography, Divider, Avatar } from \"@material-ui/core\";\ndayjs.locale(\"zh-hk\");\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\"\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\"\n  },\n  mb3: {\n    marginBottom: \"10px\"\n  },\n  avatar: {\n    backgroundColor: \"white\",\n    color: \"black\"\n  }\n});\n\nfunction getDistrictColour(district) {\n  if (district === \"New Territories\") {\n    return \"green\";\n  } else if (district === \"Hong Kong Island\") {\n    return \"blue\";\n  } else if (district === \"Kowloon\") {\n    return \"red\";\n  } else return \"#B71C1C\";\n}\n\nconst LocationCard = props => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    information,\n    district\n  } = props;\n  const list = information.map(information => {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        titleTypographyProps: {\n          variant: \"h6\"\n        },\n        style: {\n          backgroundColor: getDistrictColour(district),\n          color: \"white\"\n        },\n        title: information.buildingName,\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          alt: \"\",\n          src: information.imageUrl,\n          className: classes.avatar,\n          children: \"--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          className: classes.mb3,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body\",\n              component: \"h2\",\n              children: information.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body\",\n              children: information.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              align: \"right\",\n              children: information.phone\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  });\n  return list;\n};\n\n_s(LocationCard, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = LocationCard;\nexport default LocationCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"LocationCard\");","map":{"version":3,"sources":["/Users/manmanbbg/Desktop/degree/FYP/project/FYP_UI/src/views/Client/ClientLocation/LocationCard.js"],"names":["React","dayjs","Grid","makeStyles","CardHeader","Card","CardContent","Typography","Divider","Avatar","locale","useStyles","root","width","bullet","display","margin","transform","mb3","marginBottom","avatar","backgroundColor","color","getDistrictColour","district","LocationCard","props","classes","information","list","map","variant","buildingName","imageUrl","address","description","phone"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,IADF,EAEEC,UAFF,EAGEC,UAHF,EAIEC,IAJF,EAKEC,WALF,EAMEC,UANF,EAOEC,OAPF,EAQEC,MARF,QASO,mBATP;AAWAR,KAAK,CAACS,MAAN,CAAa,OAAb;AAEA,MAAMC,SAAS,GAAGR,UAAU,CAAC;AAC3BS,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH,GADqB;AAI3BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE,cADH;AAENC,IAAAA,MAAM,EAAE,OAFF;AAGNC,IAAAA,SAAS,EAAE;AAHL,GAJmB;AAS3BC,EAAAA,GAAG,EAAE;AACHC,IAAAA,YAAY,EAAE;AADX,GATsB;AAY3BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,eAAe,EAAE,OADX;AAENC,IAAAA,KAAK,EAAE;AAFD;AAZmB,CAAD,CAA5B;;AAkBA,SAASC,iBAAT,CAA2BC,QAA3B,EAAqC;AACnC,MAAIA,QAAQ,KAAK,iBAAjB,EAAoC;AAClC,WAAO,OAAP;AACD,GAFD,MAEO,IAAIA,QAAQ,KAAK,kBAAjB,EAAqC;AAC1C,WAAO,MAAP;AACD,GAFM,MAEA,IAAIA,QAAQ,KAAK,SAAjB,EAA4B;AACjC,WAAO,KAAP;AACD,GAFM,MAEA,OAAO,SAAP;AACR;;AAED,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAMC,OAAO,GAAGhB,SAAS,EAAzB;AACA,QAAM;AAAEiB,IAAAA,WAAF;AAAeJ,IAAAA;AAAf,MAA4BE,KAAlC;AACA,QAAMG,IAAI,GAAGD,WAAW,CAACE,GAAZ,CAAiBF,WAAD,IAAiB;AAC5C,wBACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAED,OAAO,CAACf,IAAzB;AAAA,8BACE,QAAC,UAAD;AACE,QAAA,oBAAoB,EAAE;AAAEmB,UAAAA,OAAO,EAAE;AAAX,SADxB;AAEE,QAAA,KAAK,EAAE;AACLV,UAAAA,eAAe,EAAEE,iBAAiB,CAACC,QAAD,CAD7B;AAELF,UAAAA,KAAK,EAAE;AAFF,SAFT;AAME,QAAA,KAAK,EAAEM,WAAW,CAACI,YANrB;AAOE,QAAA,MAAM,eACJ,QAAC,MAAD;AACE,UAAA,GAAG,EAAC,EADN;AAEE,UAAA,GAAG,EAAEJ,WAAW,CAACK,QAFnB;AAGE,UAAA,SAAS,EAAEN,OAAO,CAACP,MAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,cADF,eAkBE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAlBF,eAmBE,QAAC,WAAD;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAgB,UAAA,OAAO,EAAE,CAAzB;AAA4B,UAAA,SAAS,EAAEO,OAAO,CAACT,GAA/C;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAW,YAAA,EAAE,EAAE,EAAf;AAAA,oCACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,MAApB;AAA2B,cAAA,SAAS,EAAC,IAArC;AAAA,wBACGU,WAAW,CAACM;AADf;AAAA;AAAA;AAAA;AAAA,oBAFF,eAKE,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,MAApB;AAAA,wBAA4BN,WAAW,CAACO;AAAxC;AAAA;AAAA;AAAA;AAAA,oBALF,eAME,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,WAApB;AAAgC,cAAA,KAAK,EAAC,OAAtC;AAAA,wBACGP,WAAW,CAACQ;AADf;AAAA;AAAA;AAAA;AAAA,oBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAoCD,GArCY,CAAb;AAuCA,SAAOP,IAAP;AACD,CA3CD;;GAAMJ,Y;UACYd,S;;;KADZc,Y;AA6CN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\nimport dayjs from \"dayjs\";\nimport {\n  Grid,\n  makeStyles,\n  CardHeader,\n  Card,\n  CardContent,\n  Typography,\n  Divider,\n  Avatar,\n} from \"@material-ui/core\";\n\ndayjs.locale(\"zh-hk\");\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  mb3: {\n    marginBottom: \"10px\",\n  },\n  avatar: {\n    backgroundColor: \"white\",\n    color: \"black\",\n  },\n});\n\nfunction getDistrictColour(district) {\n  if (district === \"New Territories\") {\n    return \"green\";\n  } else if (district === \"Hong Kong Island\") {\n    return \"blue\";\n  } else if (district === \"Kowloon\") {\n    return \"red\";\n  } else return \"#B71C1C\";\n}\n\nconst LocationCard = (props) => {\n  const classes = useStyles();\n  const { information, district } = props;\n  const list = information.map((information) => {\n    return (\n      <Card className={classes.root}>\n        <CardHeader\n          titleTypographyProps={{ variant: \"h6\" }}\n          style={{\n            backgroundColor: getDistrictColour(district),\n            color: \"white\",\n          }}\n          title={information.buildingName}\n          avatar={\n            <Avatar\n              alt=\"\"\n              src={information.imageUrl}\n              className={classes.avatar}\n            >\n              --\n            </Avatar>\n          }\n        />\n        <Divider />\n        <CardContent>\n          <Grid container spacing={2} className={classes.mb3}>\n            <Grid item xs={12}>\n              <Divider />\n              <Typography variant=\"body\" component=\"h2\">\n                {information.address}\n              </Typography>\n              <Typography variant=\"body\">{information.description}</Typography>\n              <Typography variant=\"subtitle1\" align=\"right\">\n                {information.phone}\n              </Typography>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n    );\n  });\n\n  return list;\n};\n\nexport default LocationCard;\n"]},"metadata":{},"sourceType":"module"}