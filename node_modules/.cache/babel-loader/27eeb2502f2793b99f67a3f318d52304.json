{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/manmanbbg/Desktop/degree/FYP/project/FYP_UI/src/views/Client/ClientCulture/ClientCulture.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { CircularProgress, Grid, FormControlLabel, Switch } from \"@material-ui/core\"; // hook\n\nimport { useFetch } from \"../../../hooks\"; // components\n\nimport CultrueList from \"./CultureList\";\nimport { name } from \"dayjs/locale/*\";\n\nconst ClientCulture = () => {\n  _s();\n\n  const {\n    data,\n    isLoading\n  } = useFetch(\"/cultures/group\");\n  const [state, setState] = React.useState(data.map(i => i = true));\n  const [nameList, setNameList] = React.useState([]);\n\n  const handleChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n    const newNameList = [...nameList];\n\n    if (event.target.checked === true) {\n      newNameList.push(event.target.name);\n    } else {\n      newNameList.splice(event.target.name);\n    }\n\n    setNameList(newNameList);\n  };\n\n  const CheckBox = data.map(information => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n    control: /*#__PURE__*/_jsxDEV(Switch, {\n      onChange: handleChange,\n      checked: state.i,\n      name: information._id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this),\n    label: information._id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this));\n  const cultureList = data.filter(information => {\n    if (nameList == \"\") {\n      return information;\n    } else {\n      return information;\n    }\n  }).map(information => {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(CultrueList, {\n        information: information.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, information._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: isLoading ? /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this) : [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: CheckBox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: cultureList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ClientCulture, \"rAYiTPhvBjMrqjYODl1ZGwxL9mY=\", false, function () {\n  return [useFetch];\n});\n\n_c = ClientCulture;\nexport default ClientCulture;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientCulture\");","map":{"version":3,"sources":["/Users/manmanbbg/Desktop/degree/FYP/project/FYP_UI/src/views/Client/ClientCulture/ClientCulture.js"],"names":["React","CircularProgress","Grid","FormControlLabel","Switch","useFetch","CultrueList","name","ClientCulture","data","isLoading","state","setState","useState","map","i","nameList","setNameList","handleChange","event","target","checked","newNameList","push","splice","CheckBox","information","_id","cultureList","filter"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  CircularProgress,\n  Grid,\n  FormControlLabel,\n  Switch,\n} from \"@material-ui/core\";\n\n// hook\nimport { useFetch } from \"../../../hooks\";\n// components\nimport CultrueList from \"./CultureList\";\nimport { name } from \"dayjs/locale/*\";\n\nconst ClientCulture = () => {\n  const { data, isLoading } = useFetch(\"/cultures/group\");\n\n  const [state, setState] = React.useState(data.map((i) => (i = true)));\n  const [nameList, setNameList] = React.useState([]);\n\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n    const newNameList = [...nameList];\n    if (event.target.checked === true) {\n      newNameList.push(event.target.name);\n    } else {\n      newNameList.splice(event.target.name);\n    }\n    setNameList(newNameList);\n  };\n\n  const CheckBox = data.map((information) => (\n    <FormControlLabel\n      control={\n        <Switch\n          onChange={handleChange}\n          checked={state.i}\n          name={information._id}\n        />\n      }\n      label={information._id}\n    />\n  ));\n\n  const cultureList = data\n    .filter((information) => {\n      if (nameList == \"\") {\n        return information;\n      } else {\n        return information;\n      }\n    })\n    .map((information) => {\n      return (\n        <Grid key={information._id} item xs={12}>\n          <CultrueList information={information.data} />\n        </Grid>\n      );\n    });\n\n  return (\n    <div>\n      <Grid item xs={12}>\n        <Grid container spacing={3}>\n          {isLoading ? (\n            <Grid item xs={12}>\n              <CircularProgress />\n            </Grid>\n          ) : (\n            [\n              <Grid item xs={12}>\n                {CheckBox}\n              </Grid>,\n              <Grid item xs={12}>\n                {cultureList}\n              </Grid>,\n            ]\n          )}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default ClientCulture;\n"]},"metadata":{},"sourceType":"module"}