{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/manmanbbg/Desktop/degree/FYP/project/FYP_UI/src/views/Client/ClientLocation/LocationCard.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport dayjs from \"dayjs\";\nimport { Grid, makeStyles, CardHeader, Card, CardContent, Typography, Divider, Avatar } from \"@material-ui/core\";\ndayjs.locale(\"zh-hk\");\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\"\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\"\n  },\n  mb3: {\n    marginBottom: \"10px\"\n  },\n  avatar: {\n    backgroundColor: \"white\",\n    color: \"black\"\n  }\n});\n\nfunction getDistrictColour(district) {\n  if (district === \"New Territories\") {\n    return \"green\";\n  } else if (district === \"Hong Kong Island\") {\n    return \"blue\";\n  } else if (district === \"Kowloon\") {\n    return \"red\";\n  } else {\n    return \"#B71C1C\";\n  }\n}\n\nconst locationList = information.map(information => /*#__PURE__*/_jsxDEV(Card, {\n  className: classes.root,\n  children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n    titleTypographyProps: {\n      variant: \"h6\"\n    },\n    style: {\n      backgroundColor: getDistrictColour(district),\n      color: \"white\"\n    },\n    title: information.buildingName,\n    avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n      alt: \"\",\n      src: information.imageUrl,\n      className: classes.avatar,\n      children: \"--\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      className: classes.mb3,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          children: information.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 47,\n  columnNumber: 3\n}, this));\n\nconst LocationCard = props => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    information,\n    district\n  } = props;\n  return {\n    locationList\n  };\n};\n\n_s(LocationCard, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = LocationCard;\nexport default LocationCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"LocationCard\");","map":{"version":3,"sources":["/Users/manmanbbg/Desktop/degree/FYP/project/FYP_UI/src/views/Client/ClientLocation/LocationCard.js"],"names":["React","dayjs","Grid","makeStyles","CardHeader","Card","CardContent","Typography","Divider","Avatar","locale","useStyles","root","width","bullet","display","margin","transform","mb3","marginBottom","avatar","backgroundColor","color","getDistrictColour","district","locationList","information","map","classes","variant","buildingName","imageUrl","description","LocationCard","props"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport dayjs from \"dayjs\";\nimport {\n  Grid,\n  makeStyles,\n  CardHeader,\n  Card,\n  CardContent,\n  Typography,\n  Divider,\n  Avatar,\n} from \"@material-ui/core\";\n\ndayjs.locale(\"zh-hk\");\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  mb3: {\n    marginBottom: \"10px\",\n  },\n  avatar: {\n    backgroundColor: \"white\",\n    color: \"black\",\n  },\n});\n\nfunction getDistrictColour(district) {\n  if (district === \"New Territories\") {\n    return \"green\";\n  } else if (district === \"Hong Kong Island\") {\n    return \"blue\";\n  } else if (district === \"Kowloon\") {\n    return \"red\";\n  } else {\n    return \"#B71C1C\";\n  }\n}\n\nconst locationList = information.map((information) => (\n  <Card className={classes.root}>\n    <CardHeader\n      titleTypographyProps={{ variant: \"h6\" }}\n      style={{\n        backgroundColor: getDistrictColour(district),\n        color: \"white\",\n      }}\n      title={information.buildingName}\n      avatar={\n        <Avatar alt=\"\" src={information.imageUrl} className={classes.avatar}>\n          --\n        </Avatar>\n      }\n    />\n    <Divider />\n    <CardContent>\n      <Grid container spacing={2} className={classes.mb3}>\n        <Grid item xs={12}>\n          <Divider />\n          <Typography variant=\"caption\">{information.description}</Typography>\n        </Grid>\n      </Grid>\n    </CardContent>\n  </Card>\n));\n\nconst LocationCard = (props) => {\n  const classes = useStyles();\n  const { information, district } = props;\n\n  return { locationList };\n};\n\nexport default LocationCard;\n"]},"metadata":{},"sourceType":"module"}