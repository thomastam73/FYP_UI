{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/manmanbbg/Desktop/degree/FYP/project/FYP_UI/src/views/Client/ClientCulture/ClientCulture.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { CircularProgress, Grid, FormControlLabel, Switch } from \"@material-ui/core\"; // hook\n\nimport { useFetch } from \"../../../hooks\"; // components\n\nimport CultrueList from \"./CultureList\";\n\nconst ClientCulture = () => {\n  _s();\n\n  const {\n    data,\n    isLoading\n  } = useFetch(\"/cultures/group\");\n  const [state, setState] = React.useState(data.map(i => i = true));\n  const [nameList, setNameList] = React.useState([]);\n  const [count, setCount] = React.useState(0);\n\n  const handleChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n    const newNameList = nameList;\n\n    if (event.target.checked === true) {\n      newNameList.push(event.target.name);\n      setCount(count + 1);\n    } else {\n      for (let i = 0; i < newNameList.length; i++) {\n        if (newNameList[i] === event.target.name) {\n          newNameList.splice(i, 1);\n        }\n      }\n\n      setCount(count - 1);\n    }\n\n    setNameList(newNameList);\n  };\n\n  const CheckBox = data.map(information => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n    control: /*#__PURE__*/_jsxDEV(Switch, {\n      onChange: handleChange,\n      checked: state.i,\n      name: information._id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this),\n    label: information._id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this));\n  const filterLists = data.map(information => {\n    const list = [];\n\n    for (let i = 0; i < nameList.length; i++) {\n      if (information._id === nameList[i]) {\n        list[i] = information._id;\n        console.log(list[i]);\n      }\n    }\n\n    console.log(list);\n    return list;\n  });\n  const filterList = filterLists.map((a, i) => {\n    console.log(filterLists);\n    return a;\n  });\n  const cultureList = filterList.map(information => {\n    if (information === []) {\n      return data.map(information => {\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(CultrueList, {\n            information: information.data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, information._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this);\n      });\n    } else {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(CultrueList, {\n          information: information.data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, information._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: isLoading ? /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this) : [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: CheckBox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: cultureList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this)]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ClientCulture, \"7MZMPtP/IYRJoGrfjTTnLUQRYUM=\", false, function () {\n  return [useFetch];\n});\n\n_c = ClientCulture;\nexport default ClientCulture;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientCulture\");","map":{"version":3,"sources":["/Users/manmanbbg/Desktop/degree/FYP/project/FYP_UI/src/views/Client/ClientCulture/ClientCulture.js"],"names":["React","CircularProgress","Grid","FormControlLabel","Switch","useFetch","CultrueList","ClientCulture","data","isLoading","state","setState","useState","map","i","nameList","setNameList","count","setCount","handleChange","event","target","name","checked","newNameList","push","length","splice","CheckBox","information","_id","filterLists","list","console","log","filterList","a","cultureList"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  CircularProgress,\n  Grid,\n  FormControlLabel,\n  Switch,\n} from \"@material-ui/core\";\n\n// hook\nimport { useFetch } from \"../../../hooks\";\n// components\nimport CultrueList from \"./CultureList\";\n\nconst ClientCulture = () => {\n  const { data, isLoading } = useFetch(\"/cultures/group\");\n\n  const [state, setState] = React.useState(data.map((i) => (i = true)));\n  const [nameList, setNameList] = React.useState([]);\n  const [count, setCount] = React.useState(0);\n\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n    const newNameList = nameList;\n    if (event.target.checked === true) {\n      newNameList.push(event.target.name);\n      setCount(count + 1);\n    } else {\n      for (let i = 0; i < newNameList.length; i++) {\n        if (newNameList[i] === event.target.name) {\n          newNameList.splice(i, 1);\n        }\n      }\n      setCount(count - 1);\n    }\n    setNameList(newNameList);\n  };\n\n  const CheckBox = data.map((information) => (\n    <FormControlLabel\n      control={\n        <Switch\n          onChange={handleChange}\n          checked={state.i}\n          name={information._id}\n        />\n      }\n      label={information._id}\n    />\n  ));\n\n  const filterLists = data.map((information) => {\n    const list = [];\n    for (let i = 0; i < nameList.length; i++) {\n      if (information._id === nameList[i]) {\n        list[i] = information._id;\n        console.log(list[i]);\n      }\n    }\n    console.log(list);\n    return list;\n  });\n\n  const filterList = filterLists.map((a, i) => {\n    console.log(filterLists);\n    return a;\n  });\n\n  const cultureList = filterList.map((information) => {\n    if (information === []) {\n      return data.map((information) => {\n        return (\n          <Grid key={information._id} item xs={12}>\n            <CultrueList information={information.data} />\n          </Grid>\n        );\n      });\n    } else {\n      return (\n        <Grid key={information._id} item xs={12}>\n          <CultrueList information={information.data} />\n        </Grid>\n      );\n    }\n  });\n\n  return (\n    <div>\n      <Grid item xs={12}>\n        <Grid container spacing={3}>\n          {isLoading ? (\n            <Grid item xs={12}>\n              <CircularProgress />\n            </Grid>\n          ) : (\n            [\n              <Grid item xs={12}>\n                {CheckBox}\n              </Grid>,\n              <Grid item xs={12}>\n                {cultureList}\n              </Grid>,\n            ]\n          )}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default ClientCulture;\n"]},"metadata":{},"sourceType":"module"}