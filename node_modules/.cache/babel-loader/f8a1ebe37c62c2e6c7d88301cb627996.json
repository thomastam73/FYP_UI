{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from'react';import dayjs from'dayjs';import{Grid,makeStyles,CardHeader,Card,CardContent,Typography,Divider,Avatar}from'@material-ui/core';dayjs.locale('zh-hk');var useStyles=makeStyles({root:{width:'100%'},bullet:{display:'inline-block',margin:'0 2px',transform:'scale(0.8)'},mb3:{marginBottom:'10px'},avatar:{backgroundColor:'white',color:'black'}});function getHKDate(date){if(date===null){return'--';}return dayjs(date).format('YYYY-MM-DD');}function getStatusColor(date){var today=dayjs(new Date());var endDate=dayjs(date);if(endDate.isBefore(today)){return'#616161';}return'#B71C1C';}var RuleCard=function RuleCard(props){var classes=useStyles();var information=props.information;return/*#__PURE__*/_jsxs(Card,{className:classes.root,children:[/*#__PURE__*/_jsx(CardHeader,{titleTypographyProps:{variant:'h6'},style:{backgroundColor:getStatusColor(information.endDate),color:'white'},title:\"\".concat(information.ruleName),avatar:/*#__PURE__*/_jsx(Avatar,{alt:\"\",src:information.imageUrl,className:classes.avatar,children:\"--\"})}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,className:classes.mb3,children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"caption\",children:\"Start Date\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:getHKDate(information.startDate)})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:6,children:[/*#__PURE__*/_jsx(Typography,{variant:\"caption\",children:\"End Date\"}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",children:getHKDate(information.endDate)})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:12,children:[/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(Typography,{variant:\"caption\",children:information.description})]})]})})]});};export default RuleCard;","map":{"version":3,"sources":["/Users/manmanbbg/Desktop/degree/FYP/project/FYP_UI/src/views/Client/ClientLocation/LocationCard.js"],"names":["React","dayjs","Grid","makeStyles","CardHeader","Card","CardContent","Typography","Divider","Avatar","locale","useStyles","root","width","bullet","display","margin","transform","mb3","marginBottom","avatar","backgroundColor","color","getHKDate","date","format","getStatusColor","today","Date","endDate","isBefore","RuleCard","props","classes","information","variant","ruleName","imageUrl","startDate","description"],"mappings":"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","sourcesContent":["import React from 'react';\nimport dayjs from 'dayjs';\nimport {\n  Grid,\n  makeStyles,\n  CardHeader,\n  Card,\n  CardContent,\n  Typography,\n  Divider,\n  Avatar,\n} from '@material-ui/core';\n\ndayjs.locale('zh-hk');\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  mb3: {\n    marginBottom: '10px',\n  },\n  avatar: {\n    backgroundColor: 'white',\n    color: 'black',\n  },\n});\n\nfunction getHKDate(date) {\n  if (date === null) {\n    return '--';\n  }\n  return dayjs(date).format('YYYY-MM-DD');\n}\n\nfunction getStatusColor(date) {\n  const today = dayjs(new Date());\n  const endDate = dayjs(date);\n  if (endDate.isBefore(today)) {\n    return '#616161';\n  }\n  return '#B71C1C';\n}\nconst RuleCard = (props) => {\n  const classes = useStyles();\n  const { information } = props;\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        titleTypographyProps={{ variant: 'h6' }}\n        style={{ backgroundColor: getStatusColor(information.endDate), color: 'white' }}\n        title={`${information.ruleName}`}\n        avatar={\n          <Avatar alt=\"\" src={information.imageUrl} className={classes.avatar}>\n            --\n          </Avatar>\n        }\n      />\n      <Divider />\n      <CardContent>\n        <Grid container spacing={2} className={classes.mb3}>\n          <Grid item xs={6}>\n            <Typography variant=\"caption\">Start Date</Typography>\n            <Typography variant=\"body2\">{getHKDate(information.startDate)}</Typography>\n          </Grid>\n          <Grid item xs={6}>\n            <Typography variant=\"caption\">End Date</Typography>\n            <Typography variant=\"body2\">{getHKDate(information.endDate)}</Typography>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Divider />\n            <Typography variant=\"caption\">{information.description}</Typography>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default RuleCard;\n"]},"metadata":{},"sourceType":"module"}