{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/manmanbbg/Desktop/degree/FYP/project/FYP_UI/src/views/Client/ClientListeningAid/ListrningAidCard.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Grid, makeStyles, Typography, Divider } from \"@material-ui/core\";\nimport BTE from \"./product-bte.png\";\nimport CIC from \"./product-cic.png\";\nimport IIC from \"./product-iic.png\";\nimport ITC from \"./product-itc.png\";\nimport RIC from \"./product-ric.png\";\nimport ITE from \"./product-ite.png\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  chip: {\n    color: \"white\"\n  },\n  mb3: {\n    marginBottom: \"10px\"\n  }\n}));\n\nconst getHeaderColor = type => {\n  switch (type) {\n    case \"BTE\":\n      return BTE;\n\n    case \"CIC\":\n      return CIC;\n\n    case \"IIC\":\n      return IIC;\n\n    case \"ITC\":\n      return ITC;\n\n    case \"RIC\":\n      return RIC;\n\n    case \"ITE\":\n      return ITE;\n\n    default:\n      return BTE;\n  }\n};\n\nconst ListeningAidCard = props => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    information,\n    type\n  } = props;\n  const list = information.map(information => /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 12,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        color: \"inherit\",\n        align: \"center\",\n        children: information.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, information._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.root,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          color: \"inherit\",\n          align: \"left\",\n          paragraph: true,\n          children: \"Desription:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          color: \"inherit\",\n          align: \"left\",\n          paragraph: true,\n          children: information.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: getHeaderColor(type),\n          alt: information.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 12,\n    md: 12,\n    children: list\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListeningAidCard, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = ListeningAidCard;\nexport default ListeningAidCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListeningAidCard\");","map":{"version":3,"sources":["/Users/manmanbbg/Desktop/degree/FYP/project/FYP_UI/src/views/Client/ClientListeningAid/ListrningAidCard.js"],"names":["React","Grid","makeStyles","Typography","Divider","BTE","CIC","IIC","ITC","RIC","ITE","useStyles","theme","root","flexGrow","chip","color","mb3","marginBottom","getHeaderColor","type","ListeningAidCard","props","classes","information","list","map","name","_id","description"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Grid, makeStyles, Typography, Divider } from \"@material-ui/core\";\nimport BTE from \"./product-bte.png\";\nimport CIC from \"./product-cic.png\";\nimport IIC from \"./product-iic.png\";\nimport ITC from \"./product-itc.png\";\nimport RIC from \"./product-ric.png\";\nimport ITE from \"./product-ite.png\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  chip: {\n    color: \"white\",\n  },\n  mb3: {\n    marginBottom: \"10px\",\n  },\n}));\n\nconst getHeaderColor = (type) => {\n  switch (type) {\n    case \"BTE\":\n      return BTE;\n    case \"CIC\":\n      return CIC;\n    case \"IIC\":\n      return IIC;\n    case \"ITC\":\n      return ITC;\n    case \"RIC\":\n      return RIC;\n    case \"ITE\":\n      return ITE;\n    default:\n      return BTE;\n  }\n};\n\nconst ListeningAidCard = (props) => {\n  const classes = useStyles();\n  const { information, type } = props;\n  const list = information.map((information) => (\n    <Grid container>\n      <Grid item xs={12} md={12} key={information._id}>\n        <Typography variant=\"h3\" color=\"inherit\" align=\"center\">\n          {information.name}\n        </Typography>\n        <Divider />\n      </Grid>\n      <Grid container className={classes.root} spacing={2}>\n        <Grid item xs={12} sm={6}>\n          <Typography variant=\"h4\" color=\"inherit\" align=\"left\" paragraph>\n            Desription:\n          </Typography>\n          <Typography variant=\"h5\" color=\"inherit\" align=\"left\" paragraph>\n            {information.description}\n          </Typography>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <img src={getHeaderColor(type)} alt={information.type} />\n        </Grid>\n      </Grid>\n    </Grid>\n  ));\n\n  return (\n    <Grid item xs={12} md={12}>\n      {list}\n    </Grid>\n  );\n};\nexport default ListeningAidCard;\n"]},"metadata":{},"sourceType":"module"}