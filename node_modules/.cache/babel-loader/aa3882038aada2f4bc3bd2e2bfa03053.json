{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import React from\"react\";import{CircularProgress,Grid}from\"@material-ui/core\";// hook\nimport{useFetch}from\"../../../hooks\";// component\nimport LocationCard from\"./LocationCard\";var ClientLocation=function ClientLocation(){var _useFetch=useFetch(\"/rules\"),data=_useFetch.data,isLoading=_useFetch.isLoading;var locationList=data.map(function(information){return/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:6,md:4,children:/*#__PURE__*/_jsx(LocationCard,{information:information})},information._id);});return/*#__PURE__*/_jsx(\"div\",{children:isLoading?/*#__PURE__*/_jsx(CircularProgress,{}):/*#__PURE__*/_jsx(Grid,{container:true,spacing:3,children:locationList})});};export default ClientLocation;","map":{"version":3,"sources":["/Users/manmanbbg/Desktop/degree/FYP/project/FYP_UI/src/views/Client/ClientLocation/ClientLocation.js"],"names":["React","CircularProgress","Grid","useFetch","LocationCard","ClientLocation","data","isLoading","locationList","map","information","_id"],"mappings":"2CAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,gBAAT,CAA2BC,IAA3B,KAAuC,mBAAvC,CACA;AACA,OAASC,QAAT,KAAyB,gBAAzB,CACA;AACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,eACCF,QAAQ,CAAC,QAAD,CADT,CACnBG,IADmB,WACnBA,IADmB,CACbC,SADa,WACbA,SADa,CAG3B,GAAMC,CAAAA,YAAY,CAAGF,IAAI,CAACG,GAAL,CAAS,SAACC,WAAD,qBAC5B,KAAC,IAAD,EAA4B,IAAI,KAAhC,CAAiC,EAAE,CAAE,EAArC,CAAyC,EAAE,CAAE,CAA7C,CAAgD,EAAE,CAAE,CAApD,uBACE,KAAC,YAAD,EAAc,WAAW,CAAEA,WAA3B,EADF,EAAWA,WAAW,CAACC,GAAvB,CAD4B,EAAT,CAArB,CAMA,mBACE,qBACGJ,SAAS,cACR,KAAC,gBAAD,IADQ,cAGR,KAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAE,CAAzB,UACGC,YADH,EAJJ,EADF,CAWD,CApBD,CAsBA,cAAeH,CAAAA,cAAf","sourcesContent":["import React from \"react\";\nimport { CircularProgress, Grid } from \"@material-ui/core\";\n// hook\nimport { useFetch } from \"../../../hooks\";\n// component\nimport LocationCard from \"./LocationCard\";\n\nconst ClientLocation = () => {\n  const { data, isLoading } = useFetch(\"/rules\");\n\n  const locationList = data.map((information) => (\n    <Grid key={information._id} item xs={12} sm={6} md={4}>\n      <LocationCard information={information} />\n    </Grid>\n  ));\n\n  return (\n    <div>\n      {isLoading ? (\n        <CircularProgress />\n      ) : (\n        <Grid container spacing={3}>\n          {locationList}\n        </Grid>\n      )}\n    </div>\n  );\n};\n\nexport default ClientLocation;\n"]},"metadata":{},"sourceType":"module"}