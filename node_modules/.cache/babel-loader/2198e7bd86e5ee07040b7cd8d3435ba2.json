{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/manmanbbg/Desktop/degree/FYP/project/FYP_UI/src/views/Client/ClientCulture/CultureCards.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport { Grid, CardContent, Typography, Card, CardHeader, Divider, makeStyles, useTheme } from \"@material-ui/core\";\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\"\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  },\n  CardContent: {\n    backgroundColor: \"#E5E5E5\"\n  }\n});\n\nconst handleChange = () => {\n  setChecked(prev => !prev);\n};\n\nconst getHeaderColor = countrySource => {\n  _s();\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const theme = useTheme();\n\n  switch (countrySource) {\n    case \"Hong Kong\":\n      return theme.palette.primary.dark;\n\n    case \"US\":\n      return theme.palette.warning.dark;\n\n    default:\n      return theme.palette.success.dark;\n  }\n};\n\n_s(getHeaderColor, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n\nconst CultureCards = props => {\n  _s2();\n\n  const classes = useStyles();\n  const {\n    countrySource,\n    information\n  } = props;\n  const cultureList = information.map(data => {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      md: 12,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          titleTypographyProps: {\n            variant: \"body1\"\n          },\n          style: {\n            backgroundColor: getHeaderColor(countrySource),\n            color: \"white\"\n          },\n          title: data.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          className: classes.CardContent,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [\"Description: \", data.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [\"Report Dates: \", data.reportDate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, data._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 3,\n    children: cultureList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(CultureCards, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = CultureCards;\nexport default CultureCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"CultureCards\");","map":{"version":3,"sources":["/Users/manmanbbg/Desktop/degree/FYP/project/FYP_UI/src/views/Client/ClientCulture/CultureCards.js"],"names":["React","Grid","CardContent","Typography","Card","CardHeader","Divider","makeStyles","useTheme","useStyles","root","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","backgroundColor","handleChange","setChecked","prev","getHeaderColor","countrySource","theme","palette","primary","dark","warning","success","CultureCards","props","classes","information","cultureList","map","data","variant","color","name","description","reportDate","_id"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  Grid,\n  CardContent,\n  Typography,\n  Card,\n  CardHeader,\n  Divider,\n  makeStyles,\n  useTheme,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  CardContent: { backgroundColor: \"#E5E5E5\" },\n});\nconst handleChange = () => {\n  setChecked((prev) => !prev);\n};\n\nconst getHeaderColor = (countrySource) => {\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const theme = useTheme();\n  switch (countrySource) {\n    case \"Hong Kong\":\n      return theme.palette.primary.dark;\n    case \"US\":\n      return theme.palette.warning.dark;\n    default:\n      return theme.palette.success.dark;\n  }\n};\n\nconst CultureCards = (props) => {\n  const classes = useStyles();\n  const { countrySource, information } = props;\n  const cultureList = information.map((data) => {\n    return (\n      <Grid item xs={12} md={12} key={data._id}>\n        <Card className={classes.root}>\n          <CardHeader\n            titleTypographyProps={{ variant: \"body1\" }}\n            style={{\n              backgroundColor: getHeaderColor(countrySource),\n              color: \"white\",\n            }}\n            title={data.name}\n          />\n          <CardContent className={classes.CardContent}>\n            <Typography variant=\"body2\">\n              Description: {data.description}\n            </Typography>\n            <Divider />\n            <Typography variant=\"body2\">\n              Report Dates: {data.reportDate}\n            </Typography>\n          </CardContent>\n        </Card>\n      </Grid>\n    );\n  });\n\n  return (\n    <Grid container spacing={3}>\n      {cultureList}\n    </Grid>\n  );\n};\n\nexport default CultureCards;\n"]},"metadata":{},"sourceType":"module"}