{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/manmanbbg/Desktop/degree/FYP/project/FYP_UI/src/views/Client/ClientSignLanguage/ClientSignLanguage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { CircularProgress, Grid, Typography, Divider, makeStyles, Button } from \"@material-ui/core\"; // hook\n\nimport { useFetch } from \"../../../hooks\"; // component\n\nimport SignLanguagCard from \"./SignLanguagCard\";\nconst useStyles = makeStyles(theme => ({\n  title: {\n    fontWeight: \"bold\"\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst ClientSignLanguages = () => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    data,\n    isLoading\n  } = useFetch(\"/signLanguages/group\");\n  const [district, setDistrict] = React.useState(\"US\");\n\n  const handleClick = district => {\n    setDistrict(district);\n  };\n\n  const filterController = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      color: \"secondary\",\n      onClick: handleClick,\n      value: \"US\",\n      children: \"US\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: handleClick,\n      value: \"Hong Kong\",\n      children: \"Hong Kong\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n\n  const filterSignLanguageList = district => {\n    if (district === \"US\") {\n      return data.filter(information => information._id === \"New Territories\").map(information => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        md: 12,\n        children: /*#__PURE__*/_jsxDEV(SignLanguagCard, {\n          information: information.data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, information._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this));\n    } else if (district === \"Hong Kong\") {\n      return data.filter(information => information._id === \"Hong Kong Island\").map(information => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        md: 12,\n        children: /*#__PURE__*/_jsxDEV(SignLanguagCard, {\n          information: information.data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, information._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          align: \"center\",\n          className: classes.title,\n          children: \"Sign Language Dictionary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        flexGrow: \"1\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: filterController\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          align: \"center\",\n          className: classes.title,\n          children: district\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), isLoading ? /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: filterSignLanguageList(district)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ClientSignLanguages, \"tW/9r99dNKdFXFcNPWCiCuMYtmM=\", false, function () {\n  return [useStyles, useFetch];\n});\n\n_c = ClientSignLanguages;\nexport default ClientSignLanguages;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientSignLanguages\");","map":{"version":3,"sources":["/Users/manmanbbg/Desktop/degree/FYP/project/FYP_UI/src/views/Client/ClientSignLanguage/ClientSignLanguage.js"],"names":["React","CircularProgress","Grid","Typography","Divider","makeStyles","Button","useFetch","SignLanguagCard","useStyles","theme","title","fontWeight","formControl","margin","spacing","minWidth","selectEmpty","marginTop","ClientSignLanguages","classes","data","isLoading","district","setDistrict","useState","handleClick","filterController","root","filterSignLanguageList","filter","information","_id","map"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  CircularProgress,\n  Grid,\n  Typography,\n  Divider,\n  makeStyles,\n  Button,\n} from \"@material-ui/core\";\n\n// hook\nimport { useFetch } from \"../../../hooks\";\n// component\nimport SignLanguagCard from \"./SignLanguagCard\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    fontWeight: \"bold\",\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst ClientSignLanguages = () => {\n  const classes = useStyles();\n  const { data, isLoading } = useFetch(\"/signLanguages/group\");\n  const [district, setDistrict] = React.useState(\"US\");\n\n  const handleClick = (district) => {\n    setDistrict(district);\n  };\n\n  const filterController = (\n    <div className={classes.root}>\n      <Button\n        variant=\"outlined\"\n        color=\"secondary\"\n        onClick={handleClick}\n        value=\"US\"\n      >\n        US\n      </Button>\n      <Button\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={handleClick}\n        value=\"Hong Kong\"\n      >\n        Hong Kong\n      </Button>\n    </div>\n  );\n\n  const filterSignLanguageList = (district) => {\n    if (district === \"US\") {\n      return data\n        .filter((information) => information._id === \"New Territories\")\n        .map((information) => (\n          <Grid key={information._id} item xs={12} sm={12} md={12}>\n            <SignLanguagCard information={information.data} />\n          </Grid>\n        ));\n    } else if (district === \"Hong Kong\") {\n      return data\n        .filter((information) => information._id === \"Hong Kong Island\")\n        .map((information) => (\n          <Grid key={information._id} item xs={12} sm={12} md={12}>\n            <SignLanguagCard information={information.data} />\n          </Grid>\n        ));\n    }\n  };\n\n  return (\n    <div>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Typography variant=\"h3\" align=\"center\" className={classes.title}>\n            Sign Language Dictionary\n          </Typography>\n          <Divider />\n        </Grid>\n        <Grid container spacing={3} flexGrow=\"1\">\n          <Grid item xs={12}>\n            {filterController}\n          </Grid>\n        </Grid>\n        <Grid item xs={12}>\n          <Typography variant=\"h5\" align=\"center\" className={classes.title}>\n            {district}\n          </Typography>\n        </Grid>\n        {isLoading ? (\n          <Grid item xs={12}>\n            <CircularProgress />\n          </Grid>\n        ) : (\n          <Grid item xs={12}>\n            <Grid container spacing={3}>\n              {filterSignLanguageList(district)}\n            </Grid>\n          </Grid>\n        )}\n      </Grid>\n    </div>\n  );\n};\n\nexport default ClientSignLanguages;\n"]},"metadata":{},"sourceType":"module"}