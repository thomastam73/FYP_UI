{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/manmanbbg/Desktop/degree/FYP/project/FYP_UI/src/views/Client/ClientCulture/ClientCulture.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { CircularProgress, Grid, FormControlLabel, Switch } from \"@material-ui/core\"; // hook\n\nimport { useFetch } from \"../../../hooks\"; // components\n\nimport CultrueList from \"./CultureList\";\n\nconst ClientCulture = () => {\n  _s();\n\n  const {\n    data,\n    isLoading\n  } = useFetch(\"/cultures/group\");\n  const [state, setState] = React.useState(data.map(i => i = true));\n  const [nameList, setNameList] = React.useState([]);\n  const [count, setCount] = React.useState(0);\n\n  const handleChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n    const newNameList = [...nameList];\n\n    if (event.target.checked === true) {\n      newNameList.push(event.target.name);\n      setCount;\n    } else {\n      newNameList.splice(event.target.name, 1);\n    }\n\n    setNameList(newNameList);\n  };\n\n  const CheckBox = data.map(information => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n    control: /*#__PURE__*/_jsxDEV(Switch, {\n      onChange: handleChange,\n      checked: state.i,\n      name: information._id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this),\n    label: information._id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this));\n  const cultureList = data.filter(information => {\n    console.log(information._id);\n\n    if (nameList === []) {\n      return information;\n    } else {\n      for (let i; i < information._id.length; i++) {\n        if (information._id[i].includes(nameList)) {\n          return information;\n        }\n      }\n    }\n  }).map(information => {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(CultrueList, {\n        information: information.data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, information._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: isLoading ? /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this) : [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: CheckBox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: cultureList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this)]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ClientCulture, \"7MZMPtP/IYRJoGrfjTTnLUQRYUM=\", false, function () {\n  return [useFetch];\n});\n\n_c = ClientCulture;\nexport default ClientCulture;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientCulture\");","map":{"version":3,"sources":["/Users/manmanbbg/Desktop/degree/FYP/project/FYP_UI/src/views/Client/ClientCulture/ClientCulture.js"],"names":["React","CircularProgress","Grid","FormControlLabel","Switch","useFetch","CultrueList","ClientCulture","data","isLoading","state","setState","useState","map","i","nameList","setNameList","count","setCount","handleChange","event","target","name","checked","newNameList","push","splice","CheckBox","information","_id","cultureList","filter","console","log","length","includes"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,gBADF,EAEEC,IAFF,EAGEC,gBAHF,EAIEC,MAJF,QAKO,mBALP,C,CAOA;;AACA,SAASC,QAAT,QAAyB,gBAAzB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAC1B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAsBJ,QAAQ,CAAC,iBAAD,CAApC;AAEA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBX,KAAK,CAACY,QAAN,CAAeJ,IAAI,CAACK,GAAL,CAAUC,CAAD,IAAQA,CAAC,GAAG,IAArB,CAAf,CAA1B;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BhB,KAAK,CAACY,QAAN,CAAe,EAAf,CAAhC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBlB,KAAK,CAACY,QAAN,CAAe,CAAf,CAA1B;;AAEA,QAAMO,YAAY,GAAIC,KAAD,IAAW;AAC9BT,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAY,OAACU,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAA9C,KAAD,CAAR;AACA,UAAMC,WAAW,GAAG,CAAC,GAAGT,QAAJ,CAApB;;AACA,QAAIK,KAAK,CAACC,MAAN,CAAaE,OAAb,KAAyB,IAA7B,EAAmC;AACjCC,MAAAA,WAAW,CAACC,IAAZ,CAAiBL,KAAK,CAACC,MAAN,CAAaC,IAA9B;AACAJ,MAAAA,QAAQ;AACT,KAHD,MAGO;AACLM,MAAAA,WAAW,CAACE,MAAZ,CAAmBN,KAAK,CAACC,MAAN,CAAaC,IAAhC,EAAsC,CAAtC;AACD;;AACDN,IAAAA,WAAW,CAACQ,WAAD,CAAX;AACD,GAVD;;AAYA,QAAMG,QAAQ,GAAGnB,IAAI,CAACK,GAAL,CAAUe,WAAD,iBACxB,QAAC,gBAAD;AACE,IAAA,OAAO,eACL,QAAC,MAAD;AACE,MAAA,QAAQ,EAAET,YADZ;AAEE,MAAA,OAAO,EAAET,KAAK,CAACI,CAFjB;AAGE,MAAA,IAAI,EAAEc,WAAW,CAACC;AAHpB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAQE,IAAA,KAAK,EAAED,WAAW,CAACC;AARrB;AAAA;AAAA;AAAA;AAAA,UADe,CAAjB;AAaA,QAAMC,WAAW,GAAGtB,IAAI,CACrBuB,MADiB,CACTH,WAAD,IAAiB;AACvBI,IAAAA,OAAO,CAACC,GAAR,CAAYL,WAAW,CAACC,GAAxB;;AACA,QAAId,QAAQ,KAAK,EAAjB,EAAqB;AACnB,aAAOa,WAAP;AACD,KAFD,MAEO;AACL,WAAK,IAAId,CAAT,EAAYA,CAAC,GAAGc,WAAW,CAACC,GAAZ,CAAgBK,MAAhC,EAAwCpB,CAAC,EAAzC,EAA6C;AAC3C,YAAIc,WAAW,CAACC,GAAZ,CAAgBf,CAAhB,EAAmBqB,QAAnB,CAA4BpB,QAA5B,CAAJ,EAA2C;AACzC,iBAAOa,WAAP;AACD;AACF;AACF;AACF,GAZiB,EAajBf,GAbiB,CAaZe,WAAD,IAAiB;AACpB,wBACE,QAAC,IAAD;AAA4B,MAAA,IAAI,MAAhC;AAAiC,MAAA,EAAE,EAAE,EAArC;AAAA,6BACE,QAAC,WAAD;AAAa,QAAA,WAAW,EAAEA,WAAW,CAACpB;AAAtC;AAAA;AAAA;AAAA;AAAA;AADF,OAAWoB,WAAW,CAACC,GAAvB;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAnBiB,CAApB;AAqBA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA,kBACGpB,SAAS,gBACR,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADQ,GAKR,cACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,oBACGkB;AADH;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,oBACGG;AADH;AAAA;AAAA;AAAA;AAAA,gBAJF;AANJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CA3ED;;GAAMvB,a;UACwBF,Q;;;KADxBE,a;AA6EN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport {\n  CircularProgress,\n  Grid,\n  FormControlLabel,\n  Switch,\n} from \"@material-ui/core\";\n\n// hook\nimport { useFetch } from \"../../../hooks\";\n// components\nimport CultrueList from \"./CultureList\";\n\nconst ClientCulture = () => {\n  const { data, isLoading } = useFetch(\"/cultures/group\");\n\n  const [state, setState] = React.useState(data.map((i) => (i = true)));\n  const [nameList, setNameList] = React.useState([]);\n  const [count, setCount] = React.useState(0);\n\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n    const newNameList = [...nameList];\n    if (event.target.checked === true) {\n      newNameList.push(event.target.name);\n      setCount;\n    } else {\n      newNameList.splice(event.target.name, 1);\n    }\n    setNameList(newNameList);\n  };\n\n  const CheckBox = data.map((information) => (\n    <FormControlLabel\n      control={\n        <Switch\n          onChange={handleChange}\n          checked={state.i}\n          name={information._id}\n        />\n      }\n      label={information._id}\n    />\n  ));\n\n  const cultureList = data\n    .filter((information) => {\n      console.log(information._id);\n      if (nameList === []) {\n        return information;\n      } else {\n        for (let i; i < information._id.length; i++) {\n          if (information._id[i].includes(nameList)) {\n            return information;\n          }\n        }\n      }\n    })\n    .map((information) => {\n      return (\n        <Grid key={information._id} item xs={12}>\n          <CultrueList information={information.data} />\n        </Grid>\n      );\n    });\n\n  return (\n    <div>\n      <Grid item xs={12}>\n        <Grid container spacing={3}>\n          {isLoading ? (\n            <Grid item xs={12}>\n              <CircularProgress />\n            </Grid>\n          ) : (\n            [\n              <Grid item xs={12}>\n                {CheckBox}\n              </Grid>,\n              <Grid item xs={12}>\n                {cultureList}\n              </Grid>,\n            ]\n          )}\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default ClientCulture;\n"]},"metadata":{},"sourceType":"module"}