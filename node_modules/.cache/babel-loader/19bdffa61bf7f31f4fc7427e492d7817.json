{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _defineProperty from\"/Users/manmanbbg/Desktop/degree/FYP/project/FYP_UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/manmanbbg/Desktop/degree/FYP/project/FYP_UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/manmanbbg/Desktop/degree/FYP/project/FYP_UI/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{Grid}from'@material-ui/core';// components\nimport{DashboardContainer,LoadingButton}from'../../../../components';import{RuleInfo}from'../components';// hooks\nimport{usePost}from'../../../../hooks';// config\nimport dataModel from'../config/data';var AddRule=function AddRule(){var _React$useState=React.useState(dataModel),_React$useState2=_slicedToArray(_React$useState,2),states=_React$useState2[0],setStates=_React$useState2[1];var _usePost=usePost({url:'/rules',payload:states}),_usePost2=_slicedToArray(_usePost,2),res=_usePost2[0],postMethod=_usePost2[1];var handleOnChange=function handleOnChange(name){return function(e){setStates(_objectSpread(_objectSpread({},states),{},_defineProperty({},name,e.target.value)));};};return/*#__PURE__*/_jsx(DashboardContainer,{title:\"Add a new Rule\",children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,md:12,lg:8,children:/*#__PURE__*/_jsx(RuleInfo,{states:states,handleOnChange:handleOnChange})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(LoadingButton,{variant:\"contained\",color:\"primary\",onClick:postMethod,isLoading:res.isLoading,children:\"SUBMIT\"})})]})});};export default AddRule;","map":{"version":3,"sources":["/Users/manmanbbg/Desktop/degree/FYP/project/FYP_UI/src/views/Management/Rule/AddRule/AddRule.js"],"names":["React","Grid","DashboardContainer","LoadingButton","RuleInfo","usePost","dataModel","AddRule","useState","states","setStates","url","payload","res","postMethod","handleOnChange","name","e","target","value","isLoading"],"mappings":"olBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,KAAqB,mBAArB,CAEA;AACA,OAASC,kBAAT,CAA6BC,aAA7B,KAAkD,wBAAlD,CACA,OAASC,QAAT,KAAyB,eAAzB,CACA;AACA,OAASC,OAAT,KAAwB,mBAAxB,CACA;AACA,MAAOC,CAAAA,SAAP,KAAsB,gBAAtB,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAAM,qBACQP,KAAK,CAACQ,QAAN,CAAeF,SAAf,CADR,oDACbG,MADa,qBACLC,SADK,kCAEML,OAAO,CAAC,CAAEM,GAAG,CAAE,QAAP,CAAiBC,OAAO,CAAEH,MAA1B,CAAD,CAFb,sCAEbI,GAFa,cAERC,UAFQ,cAIpB,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,IAAD,QAAU,UAACC,CAAD,CAAO,CACtCP,SAAS,gCAAMD,MAAN,wBAAeO,IAAf,CAAsBC,CAAC,CAACC,MAAF,CAASC,KAA/B,GAAT,CACD,CAFsB,EAAvB,CAIA,mBACE,KAAC,kBAAD,EAAoB,KAAK,CAAC,gBAA1B,uBACE,MAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAE,CAAzB,wBACE,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,CAAmB,EAAE,CAAE,EAAvB,CAA2B,EAAE,CAAE,CAA/B,uBACE,KAAC,QAAD,EAAU,MAAM,CAAEV,MAAlB,CAA0B,cAAc,CAAEM,cAA1C,EADF,EADF,cAKE,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,uBACE,KAAC,aAAD,EACE,OAAO,CAAC,WADV,CAEE,KAAK,CAAC,SAFR,CAGE,OAAO,CAAED,UAHX,CAIE,SAAS,CAAED,GAAG,CAACO,SAJjB,oBADF,EALF,GADF,EADF,CAoBD,CA5BD,CA8BA,cAAeb,CAAAA,OAAf","sourcesContent":["import React from 'react';\nimport { Grid } from '@material-ui/core';\n\n// components\nimport { DashboardContainer, LoadingButton } from '../../../../components';\nimport { RuleInfo } from '../components';\n// hooks\nimport { usePost } from '../../../../hooks';\n// config\nimport dataModel from '../config/data';\n\nconst AddRule = () => {\n  const [states, setStates] = React.useState(dataModel);\n  const [res, postMethod] = usePost({ url: '/rules', payload: states });\n\n  const handleOnChange = (name) => (e) => {\n    setStates({ ...states, [name]: e.target.value });\n  };\n\n  return (\n    <DashboardContainer title=\"Add a new Rule\">\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={12} lg={8}>\n          <RuleInfo states={states} handleOnChange={handleOnChange} />\n        </Grid>\n\n        <Grid item xs={12}>\n          <LoadingButton\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={postMethod}\n            isLoading={res.isLoading}\n          >\n            SUBMIT\n          </LoadingButton>\n        </Grid>\n      </Grid>\n    </DashboardContainer>\n  );\n};\n\nexport default AddRule;\n"]},"metadata":{},"sourceType":"module"}